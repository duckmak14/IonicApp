@model PricingTable
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutEmpty.cshtml";

}
@using (Html.BeginForm("Edit", "ManagePriceList", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-change-car" }))
{
<div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.RouteID, new { @class = "control-label" })
            <span class="form-obligatory">*</span>
        </div>
        <div class="controls">
            @(Html.Kendo().ComboBox()
          .Name("RouteID")
          .HtmlAttributes(new { style = "width:100%" })
          .Placeholder("Chọn mã lộ trình...")
          .DataTextField("RouteName")
          .DataValueField("RouteID")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("Get_RouteCodes", "ManagePriceList");

              })
               .ServerFiltering(false);

          })
    )
            @Html.ValidationMessageFor(m => m.RouteID)
        </div>
    </div>

    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.WeightID, new { @class = "control-label" })
            <span class="form-obligatory">*</span>
        </div>
        <div class="controls">
            @(Html.Kendo().ComboBox()
          .Name("WeightID")
          .HtmlAttributes(new { style = "width:100%" })
          .Placeholder("Chọn tải trọng...")
          .DataTextField("WeightName")
          .DataValueField("ID")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("GetWeights", "ManageCar");

              })
               .ServerFiltering(false);

          })
    )
            @Html.ValidationMessageFor(m => m.WeightID)

        </div>
    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Nhà thầu", new { @class = "control-label" })
            <span class="form-obligatory">*</span>
        </div>
        <div class="controls">
            @(Html.Kendo().ComboBox()
          .Name("SourcePartnerID")
          .HtmlAttributes(new { style = "width:100%" })
          .Placeholder("Chọn nhà thầu...")
          .DataTextField("PartnerName")
          .DataValueField("ID")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("Get_SourcePartners", "ManagePriceList");

              })
               .ServerFiltering(false);
          })
    )
            @Html.ValidationMessageFor(m => m.SourcePartnerID)

        </div>

    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.Label("Đơn vị thuê", new { @class = "control-label" })
        </div>
        <div class="controls">
            @(Html.Kendo().ComboBox()
          .Name("DestinationPartnerID")
          .HtmlAttributes(new { style = "width:100%" })
          .Placeholder("Chọn đơn vị vận chuyển...")
          .DataTextField("PartnerName")
          .DataValueField("ID")
          .DataSource(source =>
          {
              source.Read(read =>
              {
                  read.Action("Get_DestinationPartners", "ManagePriceList").Data("filterPartner");

              })
               .ServerFiltering(true);
          })
          .AutoBind(false)
          .Enable(false)
          .CascadeFrom("SourcePartnerID")

    )
            @Html.ValidationMessageFor(m => m.DestinationPartnerID)

        </div>

    </div>
    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.Price, new { @class = "control-label" })
            <span class="form-obligatory">*</span>
        </div>
        <div class="controls">
            @Html.TextBoxFor(m => m.Price, new { name = "BKS", @class = "input-block-level", id= "price" })
            @Html.ValidationMessageFor(m => m.Price)
        </div>
    </div>

    <div class="flex">
        <div class="width-text-modal">
            @Html.LabelFor(m => m.Note, new { @class = "control-label" })
        </div>
        <div class="controls">
            @Html.TextBoxFor(m => m.Note, new { type = "text", name = "BKS", @class = "input-block-level" })
            @Html.ValidationMessageFor(m => m.Note)
            @Html.ValidationSummary(true)
        </div>
    </div>
    <div class="row top-rows">
        <div class="col-lg-4 col-md-4 col-sm-4 col-4" onclick="exitWindow()">
            <div class="exit-car-form">Hủy</div>
        </div>
        <div class="col-lg-8 col-md-8 col-sm-8 col-8">
            <div>
                <input type="submit" class="btn text-14-700 save-change-car-form" value="Lưu">
            </div>
        </div>
    </div>
</div>
    @Html.AntiForgeryToken()
}

<script type="text/javascript">
    top.winsetup("Thay đổi giá", 600, 430, true);
    if (screen.width < 576) {
        top.winsetup("Thay đổi giá", screen.width * 0.8, screen.height * 0.35, true);
    }
    function edit_success() {
        top.$("#window").data("kendoWindow").close();
        top.$("#grid").data("kendoGrid").dataSource.read();
        window.parent.show_stack_bottom_right('success', 'Sửa giá', 'Sửa thành công.');

    }
    function exitWindow() {
        top.$("#window").data("kendoWindow").close();
    }
    function filterLocation() {
        return {
            startID: $("#startLocationID").val()
        };
    }
    function filterPartner() {
        return {
            sourceID: $("#SourcePartnerID").val()
        };
    }
    function setInputFilter(textbox, inputFilter) {
        ["input", "keydown", "keyup", "mousedown", "mouseup", "select", "contextmenu", "drop"].forEach(function (event) {
            textbox.addEventListener(event, function () {
                if (inputFilter(this.value)) {
                    this.oldValue = this.value;
                    this.oldSelectionStart = this.selectionStart;
                    this.oldSelectionEnd = this.selectionEnd;
                } else if (this.hasOwnProperty("oldValue")) {
                    this.value = this.oldValue;
                    this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);
                } else {
                    this.value = "";
                }
            });
        });
    }
    setInputFilter(document.getElementById("price"), function (value) {
        return /^\d*$/.test(value);
    });
</script>


